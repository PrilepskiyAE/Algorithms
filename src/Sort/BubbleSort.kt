package Sort

class BubbleSort {
    //временная сложность O(n^2)(Квадратичная сложность)
    /*Алгоритм состоит из повторяющихся проходов по сортируемому массиву.
    За каждый проход элементы последовательно сравниваются попарно и, если
    порядок в паре неверный, выполняется перестановка элементов. Проходы по массиву повторяются
     N-1 раз или до тех пор, пока на очередном проходе не окажется, что обмены больше не нужны,
     что означает — массив отсортирован. При каждом проходе алгоритма по внутреннему циклу, очередной наибольший элемент
      массива ставится на своё место в конце массива рядом с предыдущим «наибольшим элементом», а наименьший элемент
       перемещается на одну позицию к началу массива («всплывает» до нужной позиции, как пузырёк
       в воде — отсюда и название алгоритма).

     */
     fun exec(array: Array<Int>):Array<Int> {
        for (partIndex in array.size - 1 downTo 1) {
            for (i in 0 until partIndex) {
                if (array[i] > array[i + 1]) {
                    if (i == i+1) continue
                    val temp = array[i]
                    array[i] = array[i+1]
                    array[i+1] = temp
                }

            }
        }
    return array
     }


}